{"version":3,"sources":["TasksGrid.js","TasksList.js","index.js"],"names":["TasksGrid","React","Component","newTask","task","index","react_default","a","createElement","className","key","title","tasks","this","props","taskList","map","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","clearTask","setState","state","status","view","e","preventDefault","inputTask","value","enteredTask","isComplete","prevState","concat","_this2","onSubmit","onEnter","type","placeholder","ref","todo","onClick","TasksGrid_TasksGrid","ReactDOM","render","src_App","document","getElementById"],"mappings":"uKAGqBA,QCAkBC,IAAMC,qNDGzCC,QAAU,SAACC,EAAMC,GACb,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAY,YAAYC,IAAKL,GACxBD,EAAKO,gFAMlB,IAAIC,EAAQC,KAAKC,MAAMC,SAASC,IAAIH,KAAKV,SACzC,OACIG,EAAAC,EAAAC,cAAA,MAAIC,UAAY,SACXG,UAfsBX,IAAMC,YEGvCe,cAEJ,SAAAA,EAAYH,GAAM,IAAAI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IAChBC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMC,KA2BRU,UAAY,WACVN,EAAKO,SAAS,WACZ,MAAO,CAACb,MAAO,OA5BjBM,EAAKQ,MAAQ,CACXd,MAAO,GACPe,OAAQ,aACRC,KAAM,QALQV,uEAUVW,GAGN,GADAA,EAAEC,iBAC0B,KAAzBjB,KAAKkB,UAAUC,MAAa,CAC7B,IAAIC,EAAc,CAChBtB,MAAOE,KAAKkB,UAAUC,MACtBE,YAAY,GAGdrB,KAAKY,SAAS,SAACU,GACb,MAAO,CAACvB,MAAOuB,EAAUvB,MAAMwB,OAAOH,MAGxCpB,KAAKkB,UAAUC,MAAQ,qCAWlB,IAAAK,EAAAxB,KACP,OAAQP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAlB,QACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,QAAlB,SAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,6BAEFF,EAAAC,EAAAC,cAAA,QAAM8B,SAAU,SAACT,GAAKQ,EAAKE,QAAQV,IAAKpB,UAAU,WAChDH,EAAAC,EAAAC,cAAA,SACEgC,KAAK,OACL/B,UAAU,YACVgC,YAAY,iBACZC,IAAK,SAACC,GAAQN,EAAKN,UAAYY,MAGnCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,UACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,aACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAlB,OACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,MAAKmC,QAAS/B,KAAKW,WAArC,UAEFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAACqC,EAAD,CAAW9B,SAAUF,KAAKa,MAAMd,iBA5D5BX,IAAMC,WAmETe,YAEf6B,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ba8b6d5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\n\r\nexport default class TasksGrid extends React.Component {\r\n    \r\n\r\n    newTask = (task, index) => {\r\n        return (\r\n            <li className = 'gridTasks' key={index}>\r\n                    {task.title}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        var tasks = this.props.taskList.map(this.newTask);\r\n        return (\r\n            <ul className = 'tasks'>\r\n                {tasks}\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './index.css';\r\n\r\nexport default class TasksList extends React.Component {\r\n    \r\n    \r\n\r\n    newTask = (task, index) => {\r\n        return (\r\n            <p className = 'listedTask' key={index}>\r\n                    {task.title}\r\n            </p>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        var tasks = this.props.taskList.map(this.newTask);\r\n        return (\r\n            <div className = 'tasks'>\r\n                {tasks}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport TasksList from './TasksList';\nimport TasksGrid from './TasksGrid';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: [],\n      status: 'incomplete',\n      view: 'list'\n    }\n  }\n\n  //Adding the entered task into array and setting the default input to blank\n  onEnter(e) {\n    //Prevents the page from reloading after entering\n    e.preventDefault();\n    if(this.inputTask.value !== ''){\n      var enteredTask = {\n        title: this.inputTask.value,\n        isComplete: false\n      }\n      //Adds the task into the array\n      this.setState((prevState) => {\n        return {tasks: prevState.tasks.concat(enteredTask)};\n      });\n      //Setting the field blank after entering\n      this.inputTask.value = '';\n    }\n  }\n\n  //this is to clear the tasks in the array\n  clearTask = () => {\n    this.setState(()=>{\n      return {tasks: []};\n    })\n  }\n\n  render() {\n    return  <div className='ui'>\n              <div className='view-bar'>\n                <button className='view'>List</button>\n                <button className='view'>Grid</button>\n              </div>\n              <div className='header'>\n                <p>Daily Todo List</p>\n              </div>\n              <form onSubmit={(e)=>{this.onEnter(e)}} className='ui_text'>\n                <input \n                  type='text' \n                  className='textInput' \n                  placeholder='Enter the task'\n                  ref={(todo)=>{this.inputTask = todo}}\n                  />\n              </form>\n              <div className='tab-navigate'>\n                <button className='btn'>Active</button>\n                <button className='btn'>Completed</button>\n                <button className='btn'>All</button>\n                <button className='btn'onClick={this.clearTask}>Clear</button>\n              </div>\n              <div className='task-block'>\n              <TasksGrid taskList={this.state.tasks} />\n              </div>\n            </div>\n  }\n}\n\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}